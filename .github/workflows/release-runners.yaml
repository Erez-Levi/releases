name: Manual Runner Images Release

on:
  workflow_dispatch:
    inputs:
      runner_version:
        description: 'Runner Version'
        required: true
        default: '2.300.2'
      docker_version:
        description: 'Docker Version'
        required: false
        default: '20.10.12'
      runner_container_hooks_version:
        description: 'Runner Container Hooks Version'
        required: true
        default: '0.2.0'
      sha:
        # If the sha is not provided, we'll default to the commit HEAD is pointing to
        description: 'Commit Used To Build The Images'
        required: false
        default: ''
      push_to_registries:
        description: 'Push to registries'
        required: true
        type: boolean
        default: false
      troubleshoot:
        description: 'Troubleshoot'
        required: false
        type: boolean
        default: false

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  TARGET_ORG: actions-runner-controller
  TARGET_REPO: actions-runner-controller

jobs:
  build-runners:
    name: Build ${{ matrix.name }}-${{ matrix.os-name }}-${{ matrix.os-version }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: actions-runner
            os-name: ubuntu
            os-version: 20.04
            latest: "true"
          - name: actions-runner
            os-name: ubuntu
            os-version: 22.04
            latest: "false"
          - name: actions-runner-dind
            os-name: ubuntu
            os-version: 20.04
            latest: "true"
          - name: actions-runner-dind
            os-name: ubuntu
            os-version: 22.04
            latest: "false"
          - name: actions-runner-dind-rootless
            os-name: ubuntu
            os-version: 20.04
            latest: "true"
          - name: actions-runner-dind-rootless
            os-name: ubuntu
            os-version: 22.04
            latest: "false"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Docker Environment
        uses: ./.github/actions/setup-docker-environment
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          ghcr_username: ${{ github.actor }}
          ghcr_password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: actions/actions-runner-controller
          path: arc/
          ref: ${{ github.event.inputs.sha }}

      - name: Get Short SHA
        id: vars
        run: |
            echo "sha_short=$(git -C $GITHUB_WORKSPACE/arc rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Build and Push Versioned Tags
        uses: docker/build-push-action@v3
        with:
          context: ./arc/runner
          file: ./arc/runner/${{ matrix.name }}.${{matrix.os-name}}-${{ matrix.os-version }}.dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ inputs.push_to_registries }}
          build-args: |
            RUNNER_VERSION=${{ inputs.runner_version }}
            DOCKER_VERSION=${{ inputs.docker_version }}
            RUNNER_CONTAINER_HOOKS_VERSION=${{ inputs.runner_container_hooks_version }}
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.name }}:${{ matrix.os-name }}-${{ matrix.os-version }}
            ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.name }}:v${{ inputs.runner_version }}-${{ matrix.os-name }}-${{ matrix.os-version }}
            ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.name }}:v${{ inputs.runner_version }}-${{ matrix.os-name }}-${{ matrix.os-version }}-${{ steps.vars.outputs.sha_short }}
            ghcr.io/${{ env.TARGET_ORG }}/${{ env.TARGET_REPO }}/${{ matrix.name }}:${{ matrix.os-name }}-${{ matrix.os-version }}
            ghcr.io/${{ env.TARGET_ORG }}/${{ env.TARGET_REPO }}/${{ matrix.name }}:v${{ inputs.runner_version }}-${{ matrix.os-name }}-${{ matrix.os-version }}
            ghcr.io/${{ env.TARGET_ORG }}/${{ env.TARGET_REPO }}/${{ matrix.name }}:v${{ inputs.runner_version }}-${{ matrix.os-name }}-${{ matrix.os-version }}-${{ steps.vars.outputs.sha_short }}
          cache-from: type=gha,scope=build-${{ matrix.name }}
          cache-to: type=gha,mode=max,scope=build-${{ matrix.name }}

      # NOTE : Only to be used on the 20.04 image until we remove the latest tag entirely
      # at which point this step needs to be deleted
      # https://github.com/actions/actions-runner-controller/issues/2056
      - name: Build and Push Latest Tags
        if: ${{ matrix.latest == 'true' }}
        uses: docker/build-push-action@v3
        with:
          context: ./arc/runner
          file: ./arc/runner/${{ matrix.name }}.${{ matrix.os-name }}-${{ matrix.os-version }}.dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ inputs.push_to_registries }}
          build-args: |
            RUNNER_VERSION=${{ inputs.runner_version }}
            DOCKER_VERSION=${{ inputs.docker_version }}
            RUNNER_CONTAINER_HOOKS_VERSION=${{ inputs.runner_container_hooks_version }}
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.name }}:latest
            ghcr.io/${{ env.TARGET_ORG }}/${{ env.TARGET_REPO }}/${{ matrix.name }}:latest
          cache-from: type=gha,scope=build-${{ matrix.name }}-${{ matrix.os-name }}-${{ matrix.os-version }}
          cache-to: type=gha,mode=max,scope=build-${{ matrix.name }}-${{ matrix.os-name }}-${{ matrix.os-version }}
